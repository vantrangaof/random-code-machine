{"version":3,"sources":["colorsArray.js","App.js","reportWebVitals.js","index.js"],"names":["COLORS_ARRAY","quoteDBurl","App","useState","quote","setQuote","author","setAuthor","quotesArray","setQuotesArray","fetchQuotes","url","a","fetch","response","json","parsedJSON","quotes","useEffect","accentColor","setAccentColor","setRandomNumber","className","style","backgroundColor","class","id","color","href","encodeURI","icon","faTwitter","onClick","randomInteger","Math","floor","length","random","getRandomQuote","width","height","src","title","frameborder","allow","allowfullscreen","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PA+NmBA,G,MA/NE,CACjuBCrNAC,EAAa,yIA+DFC,MA7Df,WAGE,MAA0BC,mBAAS,uEAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA4BF,mBAAS,mBAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAsCJ,mBAAS,MAA/C,mBAAOK,EAAP,KAAoBC,EAApB,KAGMC,EAAW,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACKC,MAAMF,GADX,cACZG,EADY,gBAEOA,EAASC,OAFhB,OAEZC,EAFY,OAGlBP,EAAeO,EAAWC,QAHR,2CAAH,sDAMjBC,qBAAU,WACRR,EAAYT,KACX,CAACA,IAGJ,MAAsCE,mBAAS,WAA/C,mBAAOgB,EAAP,KAAoBC,EAApB,KAGF,EAAwCjB,mBAAU,GAAlD,mBAAqBkB,GAArB,WAUE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAaC,MAAO,CAACC,gBAAgBL,GAAvD,UACE,oBAAIM,MAAM,YAAV,oDACF,oBAAIA,MAAM,QAAV,mDACE,sBAAKC,GAAG,YAAYH,MAAO,CAACI,MAAMR,GAAlC,UACA,qBAAIO,GAAK,OAAT,cACEtB,EADF,OAGA,oBAAGsB,GAAK,SAAR,eACKpB,KAEL,sBAAKmB,MAAM,UAAX,UACA,mBAAGC,GAAG,cAAcH,MAAO,CAACC,gBAAgBL,GAC5CS,KAAMC,UAAW,gEADjB,SACkF,cAAC,IAAD,CAAiBC,KAAMC,QAEzG,wBAAQL,GAAG,YAAYH,MAAO,CAACC,gBAAgBL,GAC/Ca,QAAS,kBA1BM,WACrB,IAAIC,EAAgBC,KAAKC,MAAM3B,EAAY4B,OAAOF,KAAKG,UACzDhB,EAAgBY,GAChB5B,EAASG,EAAYyB,GAAe7B,OACpCG,EAAUC,EAAYyB,GAAe3B,QACrCc,EAAepB,EAAaiC,IAqBPK,IADb,6BAKA,qBAAKb,MAAM,QAAX,SACA,wBAAQc,MAAM,MAAMC,OAAO,MAAMC,IAAI,4CAA4CC,MAAM,uBAAuBC,YAAY,IAAIC,MAAM,2FAA2FC,iBAAe,YCnDvOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5f819cb0.chunk.js","sourcesContent":["const COLORS_ARRAY = [\n    '#F44336',\n    '#FFCDD2',\n    '#EF9A9A',\n    '#E57373',\n    '#EF5350',\n    '#E53935',\n    '#D32F2F',\n    '#C62828',\n    '#B71C1C',\n    '#FF8A80',\n    '#FF5252',\n    '#FF1744',\n    '#D50000',\n    '#F48FB1',\n    '#F06292',\n    '#EC407A',\n    '#E91E63',\n    '#D81B60',\n    '#C2185B',\n    '#AD1457',\n    '#880E4F',\n    '#FF4081',\n    '#F50057',\n    '#C51162',\n    '#E1BEE7',\n    '#CE93D8',\n    '#BA68C8',\n    '#AB47BC',\n    '#9C27B0',\n    '#8E24AA',\n    '#7B1FA2',\n    '#6A1B9A',\n    '#4A148C',\n    '#EA80FC',\n    '#E040FB',\n    '#D500F9',\n    '#AA00FF',\n    '#D1C4E9',\n    '#B39DDB',\n    '#9575CD',\n    '#7E57C2',\n    '#673AB7',\n    '#5E35B1',\n    '#512DA8',\n    '#4527A0',\n    '#311B92',\n    '#B388FF',\n    '#7C4DFF',\n    '#651FFF',\n    '#6200EA',\n    '#9FA8DA',\n    '#7986CB',\n    '#5C6BC0',\n    '#3F51B5',\n    '#3949AB',\n    '#303F9F',\n    '#283593',\n    '#1A237E',\n    '#8C9EFF',\n    '#536DFE',\n    '#3D5AFE',\n    '#304FFE',\n    '#BBDEFB',\n    '#90CAF9',\n    '#64B5F6',\n    '#42A5F5',\n    '#2196F3',\n    '#1E88E5',\n    '#1976D2',\n    '#1565C0',\n    '#0D47A1',\n    '#448AFF',\n    '#2979FF',\n    '#2962FF',\n    '#81D4FA',\n    '#4FC3F7',\n    '#29B6F6',\n    '#03A9F4',\n    '#039BE5',\n    '#0288D1',\n    '#0277BD',\n    '#01579B',\n    '#80D8FF',\n    '#40C4FF',\n    '#00B0FF',\n    '#0091EA',\n    '#80DEEA',\n    '#4DD0E1',\n    '#26C6DA',\n    '#00BCD4',\n    '#00ACC1',\n    '#0097A7',\n    '#00838F',\n    '#6064',\n    '#84FFFF',\n    '#18FFFF',\n    '#00E5FF',\n    '#00B8D4',\n    '#80CBC4',\n    '#4DB6AC',\n    '#26A69A',\n    '#00897B',\n    '#00796B',\n    '#00695C',\n    '#004D40',\n    '#1DE9B6',\n    '#00BFA5',\n    '#C8E6C9',\n    '#A5D6A7',\n    '#81C784',\n    '#66BB6A',\n    '#4CAF50',\n    '#43A047',\n    '#388E3C',\n    '#2E7D32',\n    '#1B5E20',\n    '#00E676',\n    '#00C853',\n    '#C5E1A5',\n    '#AED581',\n    '#9CCC65',\n    '#8BC34A',\n    '#7CB342',\n    '#689F38',\n    '#558B2F',\n    '#33691E',\n    '#B2FF59',\n    '#76FF03',\n    '#64DD17',\n    '#E6EE9C',\n    '#AFB42B',\n    '#9E9D24',\n    '#827717',\n    '#EEFF41',\n    '#C6FF00',\n    '#AEEA00',\n    '#FFF9C4',\n    '#FFF59D',\n    '#FFF176',\n    '#FFEE58',\n    '#FFEB3B',\n    '#FDD835',\n    '#FBC02D',\n    '#F9A825',\n    '#F57F17',\n    '#FFFF8D',\n    '#FFFF00',\n    '#FFEA00',\n    '#FFD600',\n    '#FFE082',\n    '#FFD54F',\n    '#FFCA28',\n    '#FFC107',\n    '#FFB300',\n    '#FFA000',\n    '#FF8F00',\n    '#FF6F00',\n    '#FFE57F',\n    '#FFD740',\n    '#FFC400',\n    '#FFAB00',\n    '#FFF3E0',\n    '#FFE0B2',\n    '#FFCC80',\n    '#FFB74D',\n    '#FFA726',\n    '#FF9800',\n    '#FB8C00',\n    '#F57C00',\n    '#EF6C00',\n    '#E65100',\n    '#FFD180',\n    '#FFAB40',\n    '#FF9100',\n    '#FF6D00',\n    '#FBE9E7',\n    '#FFCCBC',\n    '#FFAB91',\n    '#FF8A65',\n    '#FF7043',\n    '#FF5722',\n    '#F4511E',\n    '#E64A19',\n    '#D84315',\n    '#BF360C',\n    '#FF9E80',\n    '#FF6E40',\n    '#FF3D00',\n    '#DD2C00',\n    '#EFEBE9',\n    '#D7CCC8',\n    '#BCAAA4',\n    '#A1887F',\n    '#8D6E63',\n    '#795548',\n    '#6D4C41',\n    '#5D4037',\n    '#4E342E',\n    '#3E2723',\n    '#FAFAFA',\n    '#F5F5F5',\n    '#EEEEEE',\n    '#E0E0E0',\n    '#BDBDBD',\n    '#9E9E9E',\n    '#757575',\n    '#616161',\n    '#424242',\n    '#212121',\n    '#ECEFF1',\n    '#CFD8DC',\n    '#B0BEC5',\n    '#90A4AE',\n    '#78909C',\n    '#607D8B',\n    '#546E7A',\n    '#455A64',\n    '#37474F',\n    '#263238',\n    '#0',\n    ];\n\n    export default COLORS_ARRAY","import './App.scss';\nimport React, {useEffect, useState} from 'react';\nimport COLORS_ARRAY from \"./colorsArray.js\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTwitter } from '@fortawesome/free-brands-svg-icons'\n\n// Quote database url\nlet quoteDBurl = \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\"\n\nfunction App() {\n\n  // Set inital state for the quote and author\n  const [quote, setQuote] = useState(\"Life is a tragedy when seen in close-up, but a comedy in long-shot.\")\n  const [author, setAuthor] = useState(\"Charlie Chaplin\")\n  const [quotesArray, setQuotesArray] = useState(null)\n\n  // Remove the \"\" from json\n  const fetchQuotes = async (url) => {\n    const response = await fetch(url)\n    const parsedJSON = await response.json()\n    setQuotesArray(parsedJSON.quotes)\n  }\n  // Perform side effects\n  useEffect(() => {\n    fetchQuotes(quoteDBurl)\n  }, [quoteDBurl])\n\n  // Change colors\n  const [accentColor, setAccentColor] = useState('#282c34')\n\n  // Set random numbers that link to the relevant quote and author changes\nconst [randomNumber, setRandomNumber] = useState (0)\nconst getRandomQuote = () => {\n  let randomInteger = Math.floor(quotesArray.length*Math.random())\nsetRandomNumber(randomInteger)\nsetQuote(quotesArray[randomInteger].quote)\nsetAuthor(quotesArray[randomInteger].author)\nsetAccentColor(COLORS_ARRAY[randomInteger])\n\n}\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\" style={{backgroundColor:accentColor}}>\n        <h2 class=\"greetings\">Hi! Hope you'll have a great day today</h2>\n      <h3 class=\"guide\">Select \"New Quote\" To See More Quotes</h3>\n        <div id=\"quote-box\" style={{color:accentColor}}>\n        <h2 id = \"text\">\n        \"{quote}\"\n        </h2>\n        <p id = \"author\">\n          - {author}\n        </p>\n        <div class=\"buttons\">\n        <a id=\"tweet-quote\" style={{backgroundColor:accentColor}}\n        href={encodeURI( \"http://www.twitter.com/intent/tweet?text=${quote} -${author}\")}><FontAwesomeIcon icon={faTwitter} /></a>\n      \n        <button id=\"new-quote\" style={{backgroundColor:accentColor}}\n        onClick={()=>getRandomQuote()}>New Quote</button>\n        </div>\n        </div>\n\n        <div class=\"video\">\n        <iframe width=\"800\" height=\"450\" src=\"https://www.youtube.com/embed/F3bCbcwgX7o\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}